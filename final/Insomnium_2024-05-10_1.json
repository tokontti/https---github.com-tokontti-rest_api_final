{"_type":"export","__export_format":4,"__export_date":"2024-05-10T13:08:01.685Z","__export_source":"insomnia.desktop.app:v0.2.3-a","resources":[{"_id":"req_3b0a274bdc4149d4982e200237fe7525","parentId":"fld_f6e07d4d02ef4874899390711f1fb910","modified":1715344966498,"created":1715265031460,"url":"localhost:3000/api/v1/notes/8","name":"Delete note by ID","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1715265031460,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"fld_f6e07d4d02ef4874899390711f1fb910","parentId":"wrk_a135e69eb64e4e639ad401c90a9b670b","modified":1715265031445,"created":1715265031445,"name":"note","description":"Operations about notes","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1715265031445,"_type":"request_group"},{"_id":"wrk_a135e69eb64e4e639ad401c90a9b670b","parentId":null,"modified":1715256778238,"created":1715256778238,"name":"rest_api_final.yaml","description":"","scope":"design","_type":"workspace"},{"_id":"req_230ac006702a41bab44780ed479dfe5a","parentId":"fld_f6e07d4d02ef4874899390711f1fb910","modified":1715344975202,"created":1715265031459,"url":"localhost:3000/api/v1/notes/3","name":"Update note by ID","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"content\": \"string\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","disabled":false,"value":"application/json"}],"authentication":{},"metaSortKey":-1715265031459,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_2e5afccec2a94e2da20461a82344a8ae","parentId":"fld_f6e07d4d02ef4874899390711f1fb910","modified":1715344985222,"created":1715265031457,"url":"localhost:3000/api/v1/notes/7","name":"Get note by ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1715265031457,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_686afb3afdb74d5a9d68ad85c17c435e","parentId":"fld_f6e07d4d02ef4874899390711f1fb910","modified":1715344666247,"created":1715265031455,"url":"localhost:3000/api/v1/notes","name":"Create a new note","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"content\": \"string\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","disabled":false,"value":"application/json"}],"authentication":{},"metaSortKey":-1715265031455,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_e1231d1456c845b8a9c6d0a190e6786b","parentId":"fld_f6e07d4d02ef4874899390711f1fb910","modified":1715344676309,"created":1715265031453,"url":"localhost:3000/api/v1/notes","name":"Get all notes","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"apikey","key":"sessionId","value":"{{ _.sessionId }}","addTo":"cookie"},"metaSortKey":-1715265031453,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_562cae22f2584e3ab5412d9f807f03c7","parentId":"fld_b8ad1845927a4870bbcc37a98b0e3d7b","modified":1715344706156,"created":1715265031452,"url":"localhost:3000/api/v1/user/1","name":"Delete user by ID","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1715265031452,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"fld_b8ad1845927a4870bbcc37a98b0e3d7b","parentId":"wrk_a135e69eb64e4e639ad401c90a9b670b","modified":1715265031443,"created":1715265031443,"name":"user","description":"Operations about user","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1715265031443,"_type":"request_group"},{"_id":"req_b8abbece97e245a8a36a5adfaccf5759","parentId":"fld_b8ad1845927a4870bbcc37a98b0e3d7b","modified":1715344713777,"created":1715265031451,"url":"localhost:3000/api/v1/user/1","name":"Update user by ID","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"age\": 0,\n  \"role\": \"string\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","disabled":false,"value":"application/json"}],"authentication":{},"metaSortKey":-1715265031451,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_f5f5a0f4b5654c72875debb8780006cb","parentId":"fld_b8ad1845927a4870bbcc37a98b0e3d7b","modified":1715344731836,"created":1715265031449,"url":"localhost:3000/api/v1/user/1","name":"Get user by ID","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1715265031449,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_67ccc34521d74fbabae83efee702a113","parentId":"fld_b8ad1845927a4870bbcc37a98b0e3d7b","modified":1715345031565,"created":1715345027249,"url":"localhost:3000/api/v1/user","name":"Get all users","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1715265031448.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_ca8b9ec06d5b4513855d870112232117","parentId":"fld_b8ad1845927a4870bbcc37a98b0e3d7b","modified":1715344922279,"created":1715265031448,"url":"localhost:3000/api/v1/user","name":"Create a new user","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"username\": \"admin5\",\n  \"password\": \"admin2024\",\n  \"age\": 22,\n  \"role\": \"admin\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","disabled":false,"value":"application/json"}],"authentication":{},"metaSortKey":-1715265031448,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"req_def40eff7c314abf916000c80a2fb288","parentId":"fld_b8ad1845927a4870bbcc37a98b0e3d7b","modified":1715344945159,"created":1715344833228,"url":"localhost:3000/api/v1/user/login","name":"login  user","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"username\": \"admin5\",\n  \"password\": \"admin2024\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","disabled":false,"value":"application/json"}],"authentication":{},"metaSortKey":-1715265031447.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","segmentParams":[],"_type":"request"},{"_id":"env_19834bc40e8608be91efa25fff8df2ccf02e4f50","parentId":"wrk_a135e69eb64e4e639ad401c90a9b670b","modified":1715256778283,"created":1715256778283,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1715256778283,"_type":"environment"},{"_id":"jar_19834bc40e8608be91efa25fff8df2ccf02e4f50","parentId":"wrk_a135e69eb64e4e639ad401c90a9b670b","modified":1715344946845,"created":1715256778299,"name":"Default Jar","cookies":[{"key":"accessToken","value":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjp7ImlkIjo3LCJwYXNzd29yZCI6IiQyYiQxMCRuSWEwTzM0WkI0VGFKRVpjNUJncUdPRmdIaFpqd3dqcjhuQXJoN0F1Mkd1cVVFVmxDMkRTaSIsInJvbGUiOiJhZG1pbiJ9LCJpYXQiOjE3MTUzNDQ5NDYsImV4cCI6MTcxNTM0ODU0NiwianRpIjoiNTgzOWU2ZTAtYzhkOS00YjQ5LWIwYjAtOGRjYmMxMTZiZTc1In0.rveP9NZFz-F0JhA2sJQW5jQw5yPxJbxLJnzAfkAXnPo","domain":"localhost","path":"/","secure":true,"httpOnly":true,"hostOnly":true,"creation":"2024-05-10T12:42:15.934Z","lastAccessed":"2024-05-10T12:42:26.845Z","sameSite":"lax","id":"7438389809863128"}],"_type":"cookie_jar"},{"_id":"spc_44c838d9d4b448888bed29e4ffa6c09a","parentId":"wrk_a135e69eb64e4e639ad401c90a9b670b","modified":1715345252515,"created":1715260219892,"fileName":"rest_api_final.yaml","contents":"openapi: 3.0.0\ninfo:\n  description: \"REST API for managing users and notes.\"\n  version: 1.0.0\n  title: My REST API\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://localhost:3000\n    description: Local development server\ntags:\n  - name: user\n    description: Operations about user\n  - name: note\n    description: Operations about notes\npaths:\n  /api/v1/user:\n    get:\n      tags:\n        - user\n      summary: Get all users\n      description: Returns the account information of the logged-in user.\n      operationId: getUserAccount\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n    post:\n      tags:\n        - user\n      summary: Create a new user\n      description: Creates a new user with the provided data.\n      operationId: createUser\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewUser\"\n      responses:\n        \"201\":\n          description: User created successfully\n        \"400\":\n          description: Invalid data provided\n\n  /api/v1/user/{id}:\n    get:\n      tags:\n        - user\n      summary: Get user by ID\n      description: Returns the user with the specified ID.\n      operationId: getUserById\n      parameters:\n        - name: id\n          in: path\n          description: ID of the user to retrieve\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"404\":\n          description: User not found\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n    put:\n      tags:\n        - user\n      summary: Update user by ID\n      description: Updates the user with the specified ID.\n      operationId: updateUserById\n      parameters:\n        - name: id\n          in: path\n          description: ID of the user to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewUser\"\n      responses:\n        \"200\":\n          description: User updated successfully\n        \"400\":\n          description: Invalid data provided\n        \"404\":\n          description: User not found\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n    delete:\n      tags:\n        - user\n      summary: Delete user by ID\n      description: Deletes the user with the specified ID.\n      operationId: deleteUserById\n      parameters:\n        - name: id\n          in: path\n          description: ID of the user to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: User deleted successfully\n        \"404\":\n          description: User not found\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n  /notes:\n    get:\n      tags:\n        - note\n      summary: Get all notes\n      description: Returns a list of all notes.\n      operationId: getAllNotes\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Note\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n    post:\n      tags:\n        - note\n      summary: Create a new note\n      description: Creates a new note with the provided content.\n      operationId: createNote\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewNote\"\n      responses:\n        \"201\":\n          description: Note created successfully\n        \"400\":\n          description: Invalid data provided\n\n  /notes/{id}:\n    get:\n      tags:\n        - note\n      summary: Get note by ID\n      description: Returns the note with the specified ID.\n      operationId: getNoteById\n      parameters:\n        - name: id\n          in: path\n          description: ID of the note to retrieve\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Note\"\n        \"404\":\n          description: Note not found\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n    put:\n      tags:\n        - note\n      summary: Update note by ID\n      description: Updates the note with the specified ID.\n      operationId: updateNoteById\n      parameters:\n        - name: id\n          in: path\n          description: ID of the note to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewNote\"\n      responses:\n        \"200\":\n          description: Note updated successfully\n        \"400\":\n          description: Invalid data provided\n        \"404\":\n          description: Note not found\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\n    delete:\n      tags:\n        - note\n      summary: Delete note by ID\n      description: Deletes the note with the specified ID.\n      operationId: deleteNoteById\n      parameters:\n        - name: id\n          in: path\n          description: ID of the note to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Note deleted successfully\n        \"404\":\n          description: Note not found\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        age:\n          type: integer\n        role:\n          type: string\n      required:\n        - username\n        - age\n        - role\n\n    NewUser:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        age:\n          type: integer\n        role:\n          type: string\n      required:\n        - username\n        - password\n        - age\n        - role\n\n    Note:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        content:\n          type: string\n      required:\n        - content\n\n    NewNote:\n      type: object\n      properties:\n        content:\n          type: string\n      required:\n        - content\n\n  responses:\n    UnauthorizedError:\n      description: Unauthorized error\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: sessionId\n","contentType":"yaml","_type":"api_spec"},{"_id":"uts_1dddf1016afc43f8b3aaac9cd2af37ff","parentId":"wrk_a135e69eb64e4e639ad401c90a9b670b","modified":1715321579451,"created":1715321579451,"name":"Ensimmäinen testi","_type":"unit_test_suite"},{"_id":"env_953dafb7792b46a5a290659a6f8695ed","parentId":"env_19834bc40e8608be91efa25fff8df2ccf02e4f50","modified":1715265031441,"created":1715265031441,"name":"OpenAPI env localhost:3000","data":{"scheme":"http","base_path":"","host":"localhost:3000","sessionId":"sessionId"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1715265031441,"_type":"environment"}]}